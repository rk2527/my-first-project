# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10N7lGPDTzvYqtoTfELri_9SJSvZHit23

**MOVIE RECOMMENDATION SYSTEM**

A recommendation system is an artificial intelligence or AI algorithm, usually associated with machine learning, that uses Big Data to suggest or recommend additional products to consumers. These can be based on various criteria, including past purchases, search history, demographic information, and other factors. Recommender systems are highly useful as they help users discover products and services they might otherwise have not found on their own.

**OBJECTIVE**

The recommendation system analyzes the past preferences of the user concerned, and then it uses this information to try to find similar movies.

**DATA SOURCES**
FROM YBI FOUNDATION GIT HUB ACCOUNT

**IMPORT LIBRARY**
"""

import pandas as pd
import numpy as np

"""**IMPORT DATA**"""

df=pd.read_csv(r'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Movies%20Recommendation.csv')

""" **DESCRIBE DATA **"""

df.head()

df.info()

df.shape

df.columns

"""**GET FEATURE SELECTION**"""

df_features=df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x=df_features['Movie_Genre']+''+df_features['Movie_Keywords']+''+df_features['Movie_Tagline']+''+df_features['Movie_Cast']+''+df_features['Movie_Director']

x.shape

"""**GET FEATURE TEXT CONVERSION TO TOKENS**"""

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf=TfidfVectorizer()

x=tfidf.fit_transform(x)

x.shape

print(x)

"""**GET SIMILARITY SCORE USING COSINE SIMILARITY**"""

from sklearn.metrics.pairwise import cosine_similarity
similarity_score =cosine_similarity(x)

similarity_score

"""GET MIVIE NAME AS INPUT FROM USE AND VALIDATE FOR CLOSEST SPELLING"""

Favourite_movie_name=input("enter your favourite movie name ")

all_movies_title_list=df['Movie_Title'].tolist()

import difflib

movie_recommendation=difflib.get_close_matches(Favourite_movie_name,all_movies_title_list)
print(movie_recommendation)

close_match=movie_recommendation[0]
print(close_match)